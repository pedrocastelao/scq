{"ast":null,"code":"import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: _enum,\n      ...eopts\n    } = opts;\n    this.enum = this.enum;\n    if (_enum) eopts.mask = '*'.repeat(_enum[0].length);\n    super._update(eopts);\n  }\n  doValidate(flags) {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) && super.doValidate(flags);\n  }\n}\nIMask.MaskedEnum = MaskedEnum;\nexport { MaskedEnum as default };","map":{"version":3,"names":["MaskedPattern","IMask","MaskedEnum","updateOptions","opts","_update","enum","_enum","eopts","mask","repeat","length","doValidate","flags","some","e","indexOf","unmaskedValue","default"],"sources":["E:/Faculdade/ADS/PROGRAMAÇÃO FULL STACK Il/Projeto/FrontEnd/saqe/node_modules/imask/esm/masked/enum.js"],"sourcesContent":["import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: _enum,\n      ...eopts\n    } = opts;\n    this.enum = this.enum;\n    if (_enum) eopts.mask = '*'.repeat(_enum[0].length);\n    super._update(eopts);\n  }\n  doValidate(flags) {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) && super.doValidate(flags);\n  }\n}\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,cAAc;AACxC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAO,2BAA2B;AAClC,OAAO,kBAAkB;AACzB,OAAO,WAAW;AAClB,OAAO,oCAAoC;AAC3C,OAAO,cAAc;AACrB,OAAO,iCAAiC;AACxC,OAAO,qBAAqB;AAC5B,OAAO,+BAA+B;AACtC,OAAO,+BAA+B;AACtC,OAAO,aAAa;;AAEpB;AACA,MAAMC,UAAU,SAASF,aAAa,CAAC;EACrCG,aAAaA,CAACC,IAAI,EAAE;IAClB,KAAK,CAACD,aAAa,CAACC,IAAI,CAAC;EAC3B;EACAC,OAAOA,CAACD,IAAI,EAAE;IACZ,MAAM;MACJE,IAAI,EAAEC,KAAK;MACX,GAAGC;IACL,CAAC,GAAGJ,IAAI;IACR,IAAI,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI;IACrB,IAAIC,KAAK,EAAEC,KAAK,CAACC,IAAI,GAAG,GAAG,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC,CAACI,MAAM,CAAC;IACnD,KAAK,CAACN,OAAO,CAACG,KAAK,CAAC;EACtB;EACAI,UAAUA,CAACC,KAAK,EAAE;IAChB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,IAAI,CAACC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAACL,UAAU,CAACC,KAAK,CAAC;EAC3F;AACF;AACAZ,KAAK,CAACC,UAAU,GAAGA,UAAU;AAE7B,SAASA,UAAU,IAAIgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}