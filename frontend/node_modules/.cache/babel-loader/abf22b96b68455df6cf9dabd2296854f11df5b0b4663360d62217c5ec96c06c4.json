{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pedro\\\\Documents\\\\SCA\\\\ProjetoFinal\\\\frontend\\\\saqe\\\\src\\\\pages\\\\reserva.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./reserva.css\";\nimport Menu from \"./menu\";\nimport ModalReserva from \"./modalReserva\";\nimport api from \"./api\";\nimport authService from \"./authService\";\nimport TabelaReservas from \"./tabelaReserva\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reserva() {\n  _s();\n  // Estado para controlar a exibição da modal\n  const [showModal, setShowModal] = useState(false);\n  // Estado para armazenar as informações do cliente e suas reservas\n  const [clienteReservas, setClienteReservas] = useState([]);\n\n  // Use o useEffect para chamar fetchData quando o componente for montado\n  useEffect(() => {\n    // Função para carregar as informações do cliente e suas reservas\n    const fetchData = async () => {\n      try {\n        const token = authService.getToken();\n        // Faça uma solicitação para obter as informações do cliente e suas reservas\n        const response = await api.get(\"/reserva\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            // Adicione o token JWT no cabeçalho Authorization\n            \"Content-Type\": \"application/json\" // Especifique o tipo de conteúdo da solicitação\n          }\n        });\n        //console.log(\"response.data\", response);\n        setClienteReservas(response.data);\n      } catch (error) {\n        console.error(\"Erro ao obter dados do cliente e suas reservas:\", error);\n      }\n    };\n    fetchData();\n\n    //console.log(\"Valor atualizado de showModal:\", showModal);\n  }, [] /*[showModal]*/);\n  // Função para editar uma reserva\n  const editarReserva = id => {\n    // Lógica para editar a reserva com o ID fornecido\n    console.log(\"Editar reserva com ID:\", id);\n  };\n\n  // Função para excluir uma reserva\n  const excluirReserva = id => {\n    // Lógica para excluir a reserva com o ID fornecido\n    console.log(\"Excluir reserva com ID:\", id);\n  };\n\n  // Função para abrir a modal\n  const openModal = () => {\n    console.log(\"Antes de setShowModal(true):\", showModal);\n    setShowModal(true);\n  };\n\n  // Função para fechar a modal\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4 text-center\",\n        children: \"Reservas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mb-4\",\n        onClick: openModal,\n        children: \"Fazer Reserva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabelaReservas, {\n        reservas: clienteReservas,\n        editarReserva: editarReserva,\n        excluirReserva: excluirReserva\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalReserva, {\n        showModal: showModal,\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Reserva, \"nqjGLQCm4E2jGVz34n4e+cu6qS4=\");\n_c = Reserva;\nexport default Reserva;\nvar _c;\n$RefreshReg$(_c, \"Reserva\");","map":{"version":3,"names":["React","useState","useEffect","Menu","ModalReserva","api","authService","TabelaReservas","jsxDEV","_jsxDEV","Reserva","_s","showModal","setShowModal","clienteReservas","setClienteReservas","fetchData","token","getToken","response","get","headers","Authorization","data","error","console","editarReserva","id","log","excluirReserva","openModal","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","reservas","_c","$RefreshReg$"],"sources":["C:/Users/Pedro/Documents/SCA/ProjetoFinal/frontend/saqe/src/pages/reserva.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./reserva.css\";\r\nimport Menu from \"./menu\";\r\nimport ModalReserva from \"./modalReserva\";\r\nimport api from \"./api\";\r\nimport authService from \"./authService\";\r\nimport TabelaReservas from \"./tabelaReserva\";\r\n\r\nfunction Reserva() {\r\n  // Estado para controlar a exibição da modal\r\n  const [showModal, setShowModal] = useState(false);\r\n  // Estado para armazenar as informações do cliente e suas reservas\r\n  const [clienteReservas, setClienteReservas] = useState([]);\r\n\r\n  // Use o useEffect para chamar fetchData quando o componente for montado\r\n  useEffect(\r\n    () => {\r\n      // Função para carregar as informações do cliente e suas reservas\r\n      const fetchData = async () => {\r\n        try {\r\n          const token = authService.getToken();\r\n          // Faça uma solicitação para obter as informações do cliente e suas reservas\r\n          const response = await api.get(\"/reserva\", {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`, // Adicione o token JWT no cabeçalho Authorization\r\n              \"Content-Type\": \"application/json\", // Especifique o tipo de conteúdo da solicitação\r\n            },\r\n          });\r\n          //console.log(\"response.data\", response);\r\n          setClienteReservas(response.data);\r\n        } catch (error) {\r\n          console.error(\r\n            \"Erro ao obter dados do cliente e suas reservas:\",\r\n            error\r\n          );\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n\r\n      //console.log(\"Valor atualizado de showModal:\", showModal);\r\n    },\r\n    [] /*[showModal]*/\r\n  );\r\n  // Função para editar uma reserva\r\n  const editarReserva = (id) => {\r\n    // Lógica para editar a reserva com o ID fornecido\r\n    console.log(\"Editar reserva com ID:\", id);\r\n  };\r\n\r\n  // Função para excluir uma reserva\r\n  const excluirReserva = (id) => {\r\n    // Lógica para excluir a reserva com o ID fornecido\r\n    console.log(\"Excluir reserva com ID:\", id);\r\n  };\r\n\r\n  // Função para abrir a modal\r\n  const openModal = () => {\r\n    console.log(\"Antes de setShowModal(true):\", showModal);\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Função para fechar a modal\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Menu />\r\n      <div className=\"container mt-5\">\r\n        <h1 className=\"mb-4 text-center\">Reservas</h1>\r\n        <button className=\"btn btn-primary mb-4\" onClick={openModal}>\r\n          Fazer Reserva\r\n        </button>\r\n        {/* Tabela de reservas */}\r\n        <TabelaReservas\r\n          reservas={clienteReservas}\r\n          editarReserva={editarReserva}\r\n          excluirReserva={excluirReserva}\r\n        />\r\n        <ModalReserva showModal={showModal} closeModal={closeModal} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reserva;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}