{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pedro\\\\Documents\\\\SCA\\\\ProjetoFinal\\\\frontend\\\\saqe\\\\src\\\\context\\\\authContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport authService from \"../pages/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/createContext();\nfunction AuthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate(); // Obtém a função de navegação\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = authService.getToken;\n    if (token) {\n      setAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n  async function handleLogin(email, senha) {\n    try {\n      const cliente = await authService.fazerLogin(email, senha);\n      setAuthenticated(true); // Define o estado de autenticação como verdadeiro\n      navigate(\"/reserva\"); // Navega para a rota \"/home\"\n      // Retorne os dados do cliente\n      return cliente;\n    } catch (error) {\n      console.error(\"Erro ao fazer login:\", error);\n      // Aqui você pode tratar o erro de acordo com sua lógica de frontend\n    }\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Logading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      authenticated,\n      handleLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"Qgeb87yfEBhvKpxf8NRZRzUiYKY=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport { Context, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useNavigate","authService","jsxDEV","_jsxDEV","Context","AuthProvider","_ref","_s","children","navigate","authenticated","setAuthenticated","loading","setLoading","token","getToken","handleLogin","email","senha","cliente","fazerLogin","error","console","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/Pedro/Documents/SCA/ProjetoFinal/frontend/saqe/src/context/authContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport authService from \"../pages/authService\";\r\n\r\nconst Context = createContext();\r\n\r\nfunction AuthProvider({ children }) {\r\n  const navigate = useNavigate(); // Obtém a função de navegação\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = authService.getToken;\r\n    if (token) {\r\n      setAuthenticated(true);\r\n    }\r\n\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  async function handleLogin(email, senha) {\r\n    try {\r\n      const cliente = await authService.fazerLogin(email, senha);\r\n      setAuthenticated(true); // Define o estado de autenticação como verdadeiro\r\n      navigate(\"/reserva\"); // Navega para a rota \"/home\"\r\n      // Retorne os dados do cliente\r\n      return cliente;\r\n    } catch (error) {\r\n      console.error(\"Erro ao fazer login:\", error);\r\n      // Aqui você pode tratar o erro de acordo com sua lógica de frontend\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return <h1>Logading...</h1>;\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={{ authenticated, handleLogin }}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport { Context, AuthProvider };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,gBAAGP,aAAa,CAAC,CAAC;AAE/B,SAASQ,YAAYA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChC,MAAMG,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMgB,KAAK,GAAGb,WAAW,CAACc,QAAQ;IAClC,IAAID,KAAK,EAAE;MACTH,gBAAgB,CAAC,IAAI,CAAC;IACxB;IAEAE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeG,WAAWA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACvC,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMlB,WAAW,CAACmB,UAAU,CAACH,KAAK,EAAEC,KAAK,CAAC;MAC1DP,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;MACxBF,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;MACtB;MACA,OAAOU,OAAO;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACF;EACF;;EAEA,IAAIT,OAAO,EAAE;IACX,oBAAOT,OAAA;MAAAK,QAAA,EAAI;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC7B;EAEA,oBACEvB,OAAA,CAACC,OAAO,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAElB,aAAa;MAAEM;IAAY,CAAE;IAAAR,QAAA,EACrDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEvB;AAACnB,EAAA,CApCQF,YAAY;EAAA,QACFL,WAAW;AAAA;AAAA6B,EAAA,GADrBxB,YAAY;AAsCrB,SAASD,OAAO,EAAEC,YAAY;AAAG,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}