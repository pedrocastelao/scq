{"version":3,"file":"imask.js","sources":["../src/core/utils.ts","../src/core/action-details.ts","../src/core/holder.ts","../src/masked/factory.ts","../src/controls/mask-element.ts","../src/controls/html-mask-element.ts","../src/controls/html-input-mask-element.ts","../src/controls/html-contenteditable-mask-element.ts","../src/controls/input.ts","../src/core/change-details.ts","../src/core/continuous-tail-details.ts","../src/masked/base.ts","../src/masked/pattern/chunk-tail-details.ts","../src/masked/pattern/cursor.ts","../src/masked/pattern/fixed-definition.ts","../src/masked/pattern/input-definition.ts","../src/masked/regexp.ts","../src/masked/pattern.ts","../src/masked/range.ts","../src/masked/date.ts","../src/masked/dynamic.ts","../src/masked/enum.ts","../src/masked/function.ts","../src/masked/number.ts","../src/masked/pipe.ts","../src/index.ts"],"sourcesContent":["/** Checks if value is string */\nexport\nfunction isString (str: unknown): str is string {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nexport\nfunction isObject (obj: unknown): obj is Object {\n  return typeof obj === 'object' && obj != null && obj?.constructor?.name === 'Object';\n}\n\nexport\nfunction pick<T, K extends keyof T, V> (\n  obj: T,\n  keys: K[] | ((v: V, k: K) => boolean),\n): Pick<T, K> {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return (Object.entries(obj) as unknown as Array<[K, V]>)\n    .reduce((acc, [k, v]) => {\n      if (keys(v, k)) acc[k] = v;\n      return acc;\n    }, {} as any);\n}\n\n/**\n  Direction\n  @prop {string} NONE\n  @prop {string} LEFT\n  @prop {string} FORCE_LEFT\n  @prop {string} RIGHT\n  @prop {string} FORCE_RIGHT\n*/\nexport\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT',\n} as const;\n\n/**\n  Direction\n  @enum {string}\n*/\nexport\ntype Direction = typeof DIRECTION[keyof typeof DIRECTION];\n\nexport\nfunction forceDirection (direction: Direction): Direction {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nexport\nfunction escapeRegExp (str: string): string {\n  return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nexport\nfunction objectIncludes (b: any, a: any): boolean {\n  if (a === b) return true;\n\n  var arrA = Array.isArray(a)\n    , arrB = Array.isArray(b)\n    , i;\n\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++)\n      if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n\n    var keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if(!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n      return a.toString() === b.toString()\n  }\n\n  return false;\n}\n\n/** Selection range */\nexport\ntype Selection = {\n  start: number;\n  end: number;\n};\n","import { type Direction, type Selection, DIRECTION } from './utils';\n\nexport\ntype ActionDetailsOptions = Pick<ActionDetails,\n  | 'value'\n  | 'cursorPos'\n  | 'oldValue'\n  | 'oldSelection'\n>;\n\n\n/** Provides details of changing input */\nexport default\nclass ActionDetails {\n  /** Current input value */\n  declare value: string;\n  /** Current cursor position */\n  declare cursorPos: number;\n  /** Old input value */\n  declare oldValue: string;\n  /** Old selection */\n  declare oldSelection: Selection;\n\n  constructor (opts: ActionDetailsOptions) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos (): number {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount (): number {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted (): string {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount (): number {\n    // Math.max for opposite operation\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\n      // for Delete\n      this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed (): string {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head (): string {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail (): string {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection (): Direction {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (\n      (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n      // if not range removed (event with backspace)\n      this.oldSelection.end === this.oldSelection.start\n    ) ?\n      DIRECTION.RIGHT :\n      DIRECTION.LEFT;\n  }\n}\n","import type { default as _InputMask, InputMaskElement as _InputMaskElement } from '../controls/input';\nimport type { default as _Masked } from '../masked/base';\nimport type { default as _MaskedPattern } from '../masked/pattern';\nimport type { default as _MaskedDate } from '../masked/date';\nimport type { default as _MaskedDynamic } from '../masked/dynamic';\nimport type { default as _MaskedEnum } from '../masked/enum';\nimport type { default as _MaskedRange } from '../masked/range';\nimport type { default as _MaskedNumber } from '../masked/number';\nimport type { default as _MaskedFunction } from '../masked/function';\nimport type { default as _MaskedRegExp } from '../masked/regexp';\nimport type {\n  default as _createMask,\n  FactoryArg,\n} from '../masked/factory';\nimport type { default as _ChangeDetails } from './change-details';\n\nimport type { default as _MaskElement } from '../controls/mask-element';\nimport type { default as _HTMLMaskElement } from '../controls/html-mask-element';\nimport type { default as _HTMLContenteditableMaskElement } from '../controls/html-contenteditable-mask-element';\nimport type {\n  createPipe as _createPipe,\n  pipe as _pipe,\n  PIPE_TYPE as _PIPE_TYPE\n} from '../masked/pipe';\n\n\n/** Applies mask on element */\nfunction IMask<Opts extends FactoryArg> (el: _InputMaskElement, opts: Opts): _InputMask<Opts> {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\ndeclare namespace IMask {\n  export let InputMask: typeof _InputMask;\n  export let createMask: typeof _createMask;\n  export let Masked: typeof _Masked;\n  export let MaskedPattern: typeof _MaskedPattern;\n  export let MaskedDate: typeof _MaskedDate;\n  export let MaskedDynamic: typeof _MaskedDynamic;\n  export let MaskedEnum: typeof _MaskedEnum;\n  export let MaskedRange: typeof _MaskedRange;\n  export let MaskedNumber: typeof _MaskedNumber;\n  export let MaskedFunction: typeof _MaskedFunction;\n  export let MaskedRegExp: typeof _MaskedRegExp;\n  export let ChangeDetails: typeof _ChangeDetails;\n  export let MaskElement: typeof _MaskElement;\n  export let HTMLMaskElement: typeof _HTMLMaskElement;\n  export let HTMLContenteditableMaskElement: typeof _HTMLContenteditableMaskElement;\n  export let createPipe: typeof _createPipe;\n  export let pipe: typeof _pipe;\n  export let PIPE_TYPE: typeof _PIPE_TYPE;\n}\n\nexport default IMask;\n","import { isString, pick, isObject } from '../core/utils';\nimport type Masked from './base';\nimport { type MaskedOptions } from './base';\nimport IMask from '../core/holder';\n\nimport type MaskedRegExp from './regexp';\nimport type MaskedPattern from './pattern';\nimport type MaskedFunction from './function';\nimport type MaskedDate from './date';\nimport type MaskedNumber from './number';\nimport type MaskedDynamic from './dynamic';\nimport type MaskedRange from './range';\nimport type MaskedEnum from './enum';\n\nimport { type MaskedEnumOptions } from './enum';\nimport { type MaskedRangeOptions } from './range';\nimport { type MaskedDynamicOptions } from './dynamic';\nimport { type MaskedPatternOptions } from './pattern';\nimport { type MaskedNumberOptions } from './number';\nimport { type MaskedRegExpOptions } from './regexp';\nimport { type MaskedFunctionOptions } from './function';\nimport { type MaskedDateOptions } from './date';\n\ntype MaskedDateFactoryOptions = Omit<MaskedDateOptions, 'mask'> & { mask: DateConstructor };\n\n\n// type MaskedConstructor =\n//   | typeof MaskedDate\n//   | typeof MaskedNumber\n//   | typeof MaskedEnum\n//   | typeof MaskedRange\n//   | typeof MaskedRegExp\n//   | typeof MaskedFunction\n//   | typeof MaskedPattern\n//   | typeof MaskedDynamic\n//   | typeof MaskedRegExp\n// ;\n\n// export type AnyMaskedOptions =\n//   | MaskedDateFactoryOptions\n//   | MaskedNumberOptions\n//   | MaskedPatternOptions\n//   | MaskedDynamicOptions\n//   | MaskedEnumOptions\n//   | MaskedRangeOptions\n//   | MaskedRegExpOptions\n//   | MaskedFunctionOptions\n//   | MaskedOptions<Masked>\n//   | { mask: MaskedConstructor }\n// ;\n\n// export type AnyMask =\n//   | MaskedDateFactoryOptions['mask']\n//   | MaskedNumberOptions['mask']\n//   | MaskedPatternOptions['mask']\n//   | MaskedDynamicOptions['mask']\n//   | MaskedRegExpOptions['mask']\n//   | MaskedFunctionOptions['mask']\n//   | Masked\n//   | MaskedConstructor\n// ;\n\nexport\ntype FactoryStaticOpts =\n  | MaskedDateFactoryOptions\n  | MaskedNumberOptions\n  | MaskedPatternOptions\n  | MaskedDynamicOptions\n  | MaskedRegExpOptions\n  | MaskedFunctionOptions\n;\n\nexport\ntype AllFactoryStaticOpts =\n  & MaskedDateFactoryOptions\n  & MaskedNumberOptions\n  & MaskedPatternOptions\n  & MaskedDynamicOptions\n  & MaskedRegExpOptions\n  & MaskedFunctionOptions\n  & MaskedEnumOptions\n  & MaskedRangeOptions\n;\n\nexport\ntype FactoryStaticReturnMasked<Opts extends FactoryStaticOpts> =\n  Opts extends MaskedDateFactoryOptions\n  ? MaskedDate\n  : Opts extends MaskedNumberOptions\n  ? MaskedNumber\n  : Opts extends MaskedEnumOptions\n  ? MaskedEnum\n  : Opts extends MaskedRangeOptions\n  ? MaskedRange\n  : Opts extends MaskedPatternOptions\n  ? MaskedPattern\n  : Opts extends MaskedDynamicOptions\n  ? MaskedDynamic\n  : Opts extends MaskedRegExpOptions\n  ? MaskedRegExp\n  : Opts extends MaskedFunctionOptions\n  ? MaskedFunction\n  : never\n;\n\n\nexport\ntype FactoryInstanceOpts = MaskedOptions & { mask: Masked };\n\nexport\ntype FactoryInstanceReturnMasked<Opts extends FactoryInstanceOpts> = Opts extends { mask: infer Masked } ? Masked : never;\n\nexport\ntype DeduceMaskedFromOpts<Opts extends FactoryStaticOpts> =\n  Opts extends MaskedPatternOptions\n  ? MaskedPattern\n  : Opts extends MaskedDateFactoryOptions\n  ? MaskedDate\n  : Opts extends MaskedNumberOptions\n  ? MaskedNumber\n  : Opts extends MaskedRegExpOptions\n  ? MaskedRegExp\n  : Opts extends MaskedFunctionOptions\n  ? MaskedFunction\n  : Opts extends MaskedDynamicOptions\n  ? MaskedDynamic\n  : Opts extends FactoryInstanceOpts\n  ? FactoryInstanceReturnMasked<Opts>\n  : never\n\nexport\ntype FactoryConstructorOpts = MaskedOptions & { mask:\n  | typeof Masked\n  | typeof MaskedDate\n  | typeof MaskedNumber\n  | typeof MaskedEnum\n  | typeof MaskedRange\n  | typeof MaskedRegExp\n  | typeof MaskedFunction\n  | typeof MaskedPattern\n  | typeof MaskedDynamic\n  | typeof MaskedRegExp\n};\n \nexport\ntype FactoryConstructorReturnMasked<Opts extends FactoryConstructorOpts> =\n  Opts extends { mask: typeof MaskedDate } ?\n  MaskedDate :\n  Opts extends { mask: typeof MaskedNumber } ?\n  MaskedNumber :\n  Opts extends { mask: typeof MaskedEnum } ?\n  MaskedEnum :\n  Opts extends { mask: typeof MaskedRange } ?\n  MaskedRange :\n  Opts extends { mask: typeof MaskedRegExp } ?\n  MaskedRegExp :\n  Opts extends { mask: typeof MaskedFunction } ?\n  MaskedFunction :\n  Opts extends { mask: typeof MaskedPattern } ?\n  MaskedPattern :\n  Opts extends { mask: typeof MaskedDynamic } ?\n  MaskedDynamic :\n  Opts extends { mask: typeof MaskedRegExp } ?\n  MaskedRegExp :\n  Masked\n;\n\nexport\ntype FactoryOpts = FactoryConstructorOpts | FactoryInstanceOpts | FactoryStaticOpts;\n\nexport\ntype FactoryArg = Masked | FactoryOpts;\n\nexport\ntype FactoryReturnMasked<Opts extends FactoryArg> =\n  Opts extends Masked\n  ? Opts\n  : Opts extends FactoryConstructorOpts\n  ? FactoryConstructorReturnMasked<Opts>\n  : Opts extends FactoryInstanceOpts\n  ? FactoryInstanceReturnMasked<Opts>\n  : Opts extends FactoryStaticOpts\n  ? FactoryStaticReturnMasked<Opts>\n  : never;\n\n\n// export\n// type DeduceMasked<Opts> =\n//   Opts extends Masked\n//   ? Opts\n//   : Opts extends FactoryStaticOpts\n//     ? DeduceMaskedFromOpts<Opts>\n//     : never;\n\n\n// export\n// type DeduceMaskedClass<Mask> =\n//   Mask extends Masked\n//     ? typeof Masked\n//     : Mask extends string\n//       ? typeof IMask.MaskedPattern\n//       : Mask extends DateConstructor\n//       ? typeof IMask.MaskedDate\n//       : Mask extends Date\n//       ? typeof IMask.MaskedDate\n//       : Mask extends NumberConstructor\n//       ? typeof IMask.MaskedNumber\n//       : Mask extends RegExp\n//       ? typeof IMask.MaskedRegExp\n//       : Mask extends Array<any>\n//       ? typeof IMask.MaskedDynamic\n//       : Mask extends ArrayConstructor\n//       ? typeof IMask.MaskedDynamic\n//       : Mask extends Function\n//       ? typeof IMask.MaskedFunction\n//       : never;\n\n// export\n// type MaskedTypedValue<Mask> = Mask extends NumberConstructor\n//   ? number\n//   : Mask extends DateConstructor\n//   ? Date\n//   : string;\n\n\n// export\n// type AllMaskedOptions =\n//   & MaskedDateFactoryOptions\n//   & MaskedNumberOptions\n//   & MaskedPatternOptions\n//   & MaskedDynamicOptions\n//   & MaskedEnumOptions\n//   & MaskedRangeOptions\n//   & MaskedDynamicOptions\n//   & MaskedRegExpOptions\n//   & MaskedFunctionOptions\n//   & FactoryInstanceOpts\n//   & FactoryConstructorOpts\n// ;\n\n\n\n/** Get Masked class by mask type */\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n// TODO\nexport function maskedClass(mask: any): any {\n  if (mask == null) throw new Error('mask property should be defined');\n\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && (mask as any).prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\n  return IMask.Masked;\n}\n\nexport\ntype NormalizedOpts = FactoryOpts & { _mask?: FactoryStaticOpts['mask'] };\n\nexport\nfunction normalizeOpts<Opts extends FactoryArg> (opts: Opts): NormalizedOpts {\n  if (!opts) throw new Error('Options in not defined');\n\n  if (IMask.Masked) {\n    if ((opts as any).prototype instanceof IMask.Masked) return { mask: opts } as NormalizedOpts;\n\n    const { mask=undefined, ...instanceOpts } = opts instanceof IMask.Masked ? { mask: opts } :\n      opts.mask instanceof IMask.Masked ? opts : {};\n\n    if (mask) {\n      const _mask = (mask as Masked).mask;\n\n      return {\n        ...pick(mask, (_, k: string) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts,\n      } as NormalizedOpts;\n    }\n  }\n\n  if (!isObject(opts)) return { mask: opts };\n\n  return { ...opts } as NormalizedOpts;\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nexport default\nfunction createMask<Opts extends FactoryArg> (opts: Opts): FactoryReturnMasked<Opts> {\n  if (IMask.Masked && (opts instanceof IMask.Masked)) return opts as FactoryReturnMasked<Opts>;\n  const nOpts = normalizeOpts(opts);\n\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be imported manually before creating mask.');\n\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if (nOpts._mask) { nOpts.mask = nOpts._mask; delete nOpts._mask; }\n  return new MaskedClass(nOpts);\n}\n\n\nIMask.createMask = createMask;\n","import IMask from '../core/holder';\n\n\nexport\ntype ElementEvent =\n  'selectionChange' |\n  'input' |\n  'drop' |\n  'click' |\n  'focus' |\n  'commit';\n\n/**\n  Generic element API to use with mask\n  @interface\n*/\nexport default\nclass MaskElement {\n  /** */\n  declare readonly _unsafeSelectionStart: number;\n  /** */\n  declare readonly _unsafeSelectionEnd: number;\n  /** */\n  declare value: string;\n\n  /** Safely returns selection start */\n  get selectionStart (): number {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch (e) {}\n\n    return start != null ?\n      start :\n      this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd (): number {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch (e) {}\n\n    return end != null ?\n      end :\n      this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select (start: number, end: number) {\n    if (start == null || end == null ||\n      start === this.selectionStart && end === this.selectionEnd) return;\n\n    try {\n      this._unsafeSelect(start, end);\n    } catch (e) {}\n  }\n\n  /** Should be overriden in subclasses */\n  _unsafeSelect (start: number, end: number): void {}\n  /** Should be overriden in subclasses */\n  get isActive (): boolean { return false; }\n  /** Should be overriden in subclasses */\n  bindEvents (handlers: {[key in ElementEvent]: Function}) {}\n  /** Should be overriden in subclasses */\n  unbindEvents (): void {}\n}\n\n\nIMask.MaskElement = MaskElement;\n","import MaskElement, { type ElementEvent } from './mask-element';\nimport IMask from '../core/holder';\n\n\n/** Bridge between HTMLElement and {@link Masked} */\nexport default\nclass HTMLMaskElement extends MaskElement {\n  /** Mapping between HTMLElement events and mask internal events */\n  static EVENTS_MAP = {\n    selectionChange: 'keydown',\n    input: 'input',\n    drop: 'drop',\n    click: 'click',\n    focus: 'focus',\n    commit: 'blur',\n  } as const;\n  /** HTMLElement to use mask on */\n  declare input: HTMLElement;\n  declare _handlers: {[k: string]: EventListener};\n\n  constructor (input: HTMLElement) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n\n  get rootElement (): HTMLDocument {\n    return (this.input.getRootNode?.() ?? document) as HTMLDocument;\n  }\n\n  /**\n    Is element in focus\n  */\n  get isActive (): boolean {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n  */\n  override bindEvents (handlers: {[key in ElementEvent]: EventListener}) {\n    (Object.keys(handlers) as Array<ElementEvent>)\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n  */\n  override unbindEvents () {\n    Object.keys(this._handlers)\n      .forEach(event => this._toggleEventHandler(event));\n  }\n\n  _toggleEventHandler (event: string, handler?: EventListener): void {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","import HTMLMaskElement from './html-mask-element';\nimport IMask from '../core/holder';\n\nexport\ntype InputElement = HTMLTextAreaElement | HTMLInputElement;\n\n/** Bridge between InputElement and {@link Masked} */\nexport default\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n  declare input: InputElement;\n\n  constructor (input: InputElement) {\n    super(input);\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** Returns InputElement selection start */\n  // @ts-ignore\n  override get _unsafeSelectionStart (): number {\n    return this.input.selectionStart;\n  }\n\n  /** Returns InputElement selection end */\n  // @ts-ignore\n  override get _unsafeSelectionEnd (): number {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect (start: number, end: number) {\n    this.input.setSelectionRange(start, end);\n  }\n\n  // @ts-ignore\n  override get value (): string {\n    return this.input.value;\n  }\n  override set value (value: string) {\n    this.input.value = value;\n  }\n}\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","import HTMLMaskElement from './html-mask-element';\nimport IMask from '../core/holder';\n\n\nexport default\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  declare input: HTMLElement;\n  /** Returns HTMLElement selection start */\n  // @ts-ignore\n  override get _unsafeSelectionStart (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  // @ts-ignore\n  override get _unsafeSelectionEnd (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  override _unsafeSelect (start: number, end: number) {\n    if (!this.rootElement.createRange) return;\n\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  // @ts-ignore\n  override get value (): string {\n    return this.input.textContent;\n  }\n  override set value (value: string) {\n    this.input.textContent = value;\n  }\n}\n\n\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n","import { objectIncludes, DIRECTION, type Selection } from '../core/utils';\nimport ActionDetails from '../core/action-details';\nimport createMask, { maskedClass, type FactoryArg, type FactoryReturnMasked } from '../masked/factory';\nimport Masked from '../masked/base';\nimport MaskElement from './mask-element';\nimport HTMLInputMaskElement, { type InputElement } from './html-input-mask-element';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element';\nimport IMask from '../core/holder';\n\n\nexport\ntype InputMaskElement = MaskElement | InputElement | HTMLElement;\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nexport default\nclass InputMask<Opts extends FactoryArg> {\n  /**\n    View element\n  */\n  declare el: MaskElement;\n\n  /** Internal {@link Masked} model */\n  declare masked: FactoryReturnMasked<Opts>;\n\n  declare _listeners: Record<string, Array<EventListener>>;\n  declare _value: string;\n  declare _changingCursorPos: number;\n  declare _unmaskedValue: string;\n  declare _selection: Selection;\n  declare _cursorChanging?: ReturnType<typeof setTimeout>;\n  declare _inputEvent?: InputEvent;\n\n  constructor (el: InputMaskElement, opts: Opts) {\n    this.el =\n      (el instanceof MaskElement) ? el :\n      (el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA') ? new HTMLContenteditableMaskElement(el) :\n      new HTMLInputMaskElement(el as InputElement);\n\n    this.masked = createMask(opts);\n\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  get mask (): Opts['mask'] {\n    return this.masked.mask;\n  }\n\n  maskEquals (mask: Opts['mask']): boolean {\n    return mask == null || this.masked?.maskEquals(mask);\n  }\n\n  set mask (mask: Opts['mask']) {\n    if (this.maskEquals(mask)) return;\n\n    if (!((mask as Masked) instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({ mask } as any);\n      return;\n    }\n\n    const masked = (mask instanceof IMask.Masked ? mask : createMask({ mask } as Opts)) as FactoryReturnMasked<Opts>;\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (str: string) {\n    if (this.value === str) return;\n\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue (): string {\n    return this._unmaskedValue;\n  }\n\n  set unmaskedValue (str: string) {\n    if (this.unmaskedValue === str) return;\n\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue (): FactoryReturnMasked<Opts>['typedValue'] {\n    return this.masked.typedValue;\n  }\n\n  set typedValue (val: FactoryReturnMasked<Opts>['typedValue']) {\n    if (this.masked.typedValueEquals(val)) return;\n\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Display value */\n  get displayValue (): string {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents () {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents () {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent (ev: string, e: InputEvent) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionEnd;\n  }\n  set cursorPos (pos: number) {\n    if (!this.el || !this.el.isActive) return;\n\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection (/* ev */) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos,\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue () {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl () {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newDisplayValue = this.displayValue;\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\n      this.value !== newValue);\n\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  updateOptions (opts: Partial<Opts>) {\n    const { mask, ...restOpts } = opts;\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts as any); // TODO \"any\" no idea\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor (cursorPos: number) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor (cursorPos: number) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents () {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor () {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor () {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly () {\n    if (this.selectionStart !== this.cursorPos) return;  // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on (ev: string, handler: EventListener): this {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off (ev: string, handler: EventListener): this {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput (e: InputEvent): void {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection,\n    });\n\n    const oldRawValue = this.masked.rawInputValue;\n\n    const offset = this.masked.splice(\n      details.startChangePos,\n      details.removed.length,\n      details.inserted,\n      details.removeDirection,\n      { input: true, raw: true },\n    ).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ?\n      details.removeDirection :\n      DIRECTION.NONE;\n\n    let cursorPos = this.masked.nearestInputPos(\n      details.startChangePos + offset,\n      removeDirection,\n    );\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange () {\n    if (this.displayValue !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop (ev: Event) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy () {\n    this._unbindEvents();\n    // @ts-ignore why not\n    this._listeners.length = 0;\n    delete this.el;\n  }\n}\n\n\nIMask.InputMask = InputMask;\n","import IMask from \"./holder\";\n\n\nexport\ntype ChangeDetailsOptions = Pick<ChangeDetails,\n  | 'inserted'\n  | 'skip'\n  | 'tailShift'\n  | 'rawInserted'\n>;\n\n/**\n  Provides details of changing model value\n*/\nexport default\nclass ChangeDetails {\n  /** Inserted symbols */\n  declare inserted: string;\n  /** Can skip chars */\n  declare skip: boolean;\n  /** Additional offset if any changes occurred before tail */\n  declare tailShift: number;\n  /** Raw inserted is used by dynamic mask */\n  declare rawInserted: string;\n\n  static normalize (prep: string | [string, ChangeDetails]): [string, ChangeDetails] {\n    return Array.isArray(prep) ? prep : [\n      prep,\n      new ChangeDetails(),\n    ];\n  }\n\n  constructor (details?: Partial<ChangeDetailsOptions>) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0,\n    }, details);\n  }\n\n  /**\n    Aggregate changes\n    @returns {ChangeDetails} `this`\n  */\n  aggregate (details: ChangeDetails): this {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset (): number {\n    return this.tailShift + this.inserted.length;\n  }\n}\n\n\nIMask.ChangeDetails = ChangeDetails;\n","import type { TailDetails, AppendTail } from './tail-details';\nimport type ChangeDetails from './change-details';\n\n\ntype ContinuousTailState = Pick<ContinuousTailDetails,\n  | 'value'\n  | 'from'\n  | 'stop'\n>;\n\n/** Provides details of continuous extracted tail */\nexport default\nclass ContinuousTailDetails implements TailDetails {\n  /** Tail value as string */\n  declare value: string;\n  /** Tail start position */\n  declare from: number;\n  /** Start position */\n  declare stop?: number;\n\n  constructor (value: string='', from: number=0, stop?: number) {\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n\n  toString (): string { return this.value; }\n\n  extend (tail: string | TailDetails): void {\n    this.value += String(tail);\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    return masked.append(this.toString(), { tail: true })\n      .aggregate(masked._appendPlaceholder());\n  }\n\n  get state (): ContinuousTailState {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop,\n    };\n  }\n\n  set state (state: ContinuousTailState) {\n    Object.assign(this, state);\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.value.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n\n  shift (): string {\n    if (!this.value.length) return '';\n\n    const shiftChar = this.value[this.value.length-1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n","import ChangeDetails from '../core/change-details';\nimport ContinuousTailDetails from '../core/continuous-tail-details';\nimport { type Direction, DIRECTION, isString, forceDirection } from '../core/utils';\nimport { type TailDetails } from '../core/tail-details';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedState = {\n  _value: string,\n};\n\n/** Append flags */\nexport\ntype AppendFlags<State=MaskedState> = {\n  input?: boolean,\n  tail?: boolean,\n  raw?: boolean,\n  _beforeTailState?: State,\n};\n\n/** Extract flags */\nexport\ntype ExtractFlags = {\n  raw?: boolean\n};\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\nexport\ntype MaskedOptions<M extends Masked=Masked, Props extends keyof M=never> = Partial<Pick<M,\n  | 'mask'\n  | 'parent'\n  | 'prepare'\n  | 'prepareChar'\n  | 'validate'\n  | 'commit'\n  | 'format'\n  | 'parse'\n  | 'overwrite'\n  | 'eager'\n  | 'skipInvalid'\n  | Props\n>>;\n\n\n/** Provides common masking stuff */\nexport default\nclass Masked<Value=any> {\n  static DEFAULTS: Partial<MaskedOptions> = {\n    skipInvalid: true,\n  };\n  static EMPTY_VALUES: Array<any> = [undefined, null, ''];\n\n  /** @type {Mask} */\n  declare mask: unknown;\n  /** */\n  declare parent?: Masked;\n  /** Transforms value before mask processing */\n  declare prepare?: (chars: string, masked: this, flags: AppendFlags) => string | [string, ChangeDetails];\n  /** Transforms each char before mask processing */\n  declare prepareChar?: (chars: string, masked: this, flags: AppendFlags) => string | [string, ChangeDetails];\n  /** Validates if value is acceptable */\n  declare validate?: (value: string, masked: this, flags: AppendFlags) => boolean;\n  /** Does additional processing at the end of editing */\n  declare commit?: (value: string, masked: this) => void;\n  /** Format typed value to string */\n  declare format?: (value: Value, masked: this) => string;\n  /** Parse strgin to get typed value */\n  declare parse?: (str: string, masked: this) => Value;\n  /** Enable characters overwriting */\n  declare overwrite?: boolean | 'shift' | undefined;\n  /** */\n  declare eager?: boolean | 'remove' | 'append' | undefined;\n  /** */\n  declare skipInvalid?: boolean | undefined;\n\n  /** */\n  declare _initialized: boolean;\n\n  declare _value: string;\n  declare _refreshing?: boolean;\n  declare _isolated?: boolean;\n\n  constructor (opts: MaskedOptions) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts,\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions (opts: Partial<MaskedOptions>) {\n    if (!Object.keys(opts).length) return;\n\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update (opts: Partial<MaskedOptions>) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state (): MaskedState {\n    return {\n      _value: this.value,\n    };\n  }\n\n  set state (state: MaskedState) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset () {\n    this._value = '';\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  set value (value: string) {\n    this.resolve(value, { input: true });\n  }\n\n  /** Resolve new value */\n  resolve (value: string, flags: AppendFlags={ input: true }): void {\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n\n  get unmaskedValue (): string {\n    return this.value;\n  }\n\n  set unmaskedValue (value: string) {\n    this.resolve(value, {});\n  }\n\n  get typedValue (): Value {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue as Value;\n  }\n\n  set typedValue (value: Value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue (): string {\n    return this.extractInput(0, this.value.length, {raw: true});\n  }\n\n  set rawInputValue (value: string) {\n    this.resolve(value, { raw: true });\n  }\n\n  get displayValue (): string {\n    return this.value;\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    return cursorPos;\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this.value.length): number {\n    return Math.min(this.value.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags?: ExtractFlags): string {\n    return this.value.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail (fromPos: number=0, toPos: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return (tail as TailDetails).appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!ch) return new ChangeDetails();\n\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch,\n    });\n  }\n\n  /** Appends char */\n  _appendChar (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): ChangeDetails {\n    const consistentState: MaskedState = this.state;\n    let details: ChangeDetails;\n    [ch, details] = this.doPrepareChar(ch, flags);\n\n    details = details.aggregate(this._appendCharRaw(ch, flags));\n\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          checkTail.unshift(this.value.length - details.tailShift);\n        }\n\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted === checkTail.toString();\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          checkTail.shift();\n\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted === checkTail.toString();\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append (str: string, flags?: AppendFlags, tail?: string | String | TailDetails): ChangeDetails {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail as TailDetails;\n    if (flags?.tail) flags._beforeTailState = this.state;\n\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n\n    for (let ci=0; ci<str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n\n    if ((this.eager === true || this.eager === 'append') && flags?.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    return details;\n  }\n\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh<T>(fn: () => T): T {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n\n    const ret = fn();\n\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.value.length), {}, '');\n    }\n\n    delete this._refreshing;\n    return ret;\n  }\n\n  runIsolated<T>(fn: (masked: this) => T): T {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n\n    const ret = fn(this);\n\n    this.state = state;\n    delete this._isolated;\n\n    return ret;\n  }\n\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare (str: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    return ChangeDetails.normalize(this.prepare ?\n      this.prepare(str, this, flags) :\n      str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar (str: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    return ChangeDetails.normalize(this.prepareChar ?\n      this.prepareChar(str, this, flags) :\n      str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate (flags: AppendFlags): boolean {\n    return (!this.validate || this.validate(this.value, this, flags)) &&\n      (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit () {\n    if (this.commit) this.commit(this.value, this);\n  }\n\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction = DIRECTION.NONE, flags: AppendFlags = { input: true }): ChangeDetails {\n    const tailPos: number = start + deleteCount;\n    const tail: TailDetails = this.extractTail(tailPos);\n\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n\n    let oldRawValue;\n    if (eagerRemove)  {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {raw: true});\n    }\n\n    let startChangePos: number = start;\n    const details: ChangeDetails = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start,\n        deleteCount > 1 && start !== 0 && !eagerRemove ?\n        DIRECTION.NONE :\n        removeDirection\n      );\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n\n    details.aggregate(this.remove(startChangePos));\n\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {\n          details\n            .aggregate(new ChangeDetails({ tailShift: -1 }))\n            .aggregate(this.remove(valLength-1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n\n  maskEquals (mask: any): boolean {\n    return this.mask === mask;\n  }\n\n  typedValueEquals (value: any): boolean {\n    const tval = this.typedValue;\n\n    return value === tval ||\n      Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) ||\n      this.format && this.format(value, this) === this.format(this.typedValue, this);\n  }\n}\n\n\nIMask.Masked = Masked;\n","import type { TailDetails, AppendTail } from '../../core/tail-details';\nimport ChangeDetails from '../../core/change-details';\nimport { isString } from '../../core/utils';\nimport ContinuousTailDetails from '../../core/continuous-tail-details';\nimport IMask from '../../core/holder';\nimport type MaskedPattern from '../pattern';\n\n\nexport\ntype ChunksTailState = Pick<ChunksTailDetails,\n  | 'from'\n  | 'stop'\n  | 'blockIndex'\n> & { chunks: Array<TailDetails['state']> };\n\nexport default\nclass ChunksTailDetails implements TailDetails {\n  declare chunks: Array<TailDetails>;\n  declare from: number;\n  declare stop?: number;\n  /** */\n  declare blockIndex?: number;\n\n  constructor (chunks: Array<TailDetails>=[], from: number=0) {\n    this.chunks = chunks;\n    this.from = from;\n  }\n\n  toString (): string {\n    return this.chunks.map(String).join('');\n  }\n\n  extend (tailChunk: string | String | TailDetails): void {\n    if (!String(tailChunk)) return;\n    tailChunk = (isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk) as TailDetails;\n\n    const lastChunk = this.chunks[this.chunks.length-1];\n    const extendLast = lastChunk &&\n      // if stops are same or tail has no stop\n      (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n      // if tail chunk goes just after last chunk\n      tailChunk.from === (lastChunk.from + lastChunk.toString().length);\n\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift();\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n\n  appendTo (masked: AppendTail | MaskedPattern): ChangeDetails {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n\n    const details = new ChangeDetails();\n\n    for (let ci=0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null &&\n        // if block not found or stop is behind lastBlock\n        (!lastBlockIter || lastBlockIter.index <= stop)\n      ) {\n        if (\n          chunk instanceof ChunksTailDetails ||\n          // for continuous block also check if stop is exist\n          masked._stops.indexOf(stop) >= 0\n        ) {\n          const phDetails = masked._appendPlaceholder(stop);\n          details.aggregate(phDetails);\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, { tail: true }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), { tail: true }));\n      }\n    };\n\n    return details;\n  }\n\n  get state (): ChunksTailState {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex,\n    };\n  }\n\n  set state (state: ChunksTailState) {\n    const { chunks, ...props } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ?\n        new ChunksTailDetails() :\n        new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.chunks.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci=0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n\n  shift (): string {\n    if (!this.chunks.length) return '';\n\n    let ci=this.chunks.length-1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n}\n","import { DIRECTION } from '../../core/utils';\nimport type MaskedPattern from '../pattern';\nimport type PatternBlock from './block';\n\n\ntype PatternCursorState = { offset: number, index: number, ok: boolean };\n\nexport default\nclass PatternCursor<Value> {\n  declare masked: MaskedPattern<Value>;\n  declare offset: number;\n  declare index: number;\n  declare ok: boolean;\n  declare _log: PatternCursorState[];\n\n  constructor (masked: MaskedPattern<Value>, pos: number) {\n    this.masked = masked;\n    this._log = [];\n\n    const { offset, index } = masked._mapPosToBlock(pos) || (\n      pos < 0 ?\n        // first\n        { index: 0, offset: 0 } :\n        // last\n        { index: this.masked._blocks.length, offset: 0 }\n    );\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n\n  get block (): PatternBlock {\n    return this.masked._blocks[this.index];\n  }\n\n  get pos (): number {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n\n  get state (): PatternCursorState {\n    return { index: this.index, offset: this.offset, ok: this.ok };\n  }\n\n  set state (s: PatternCursorState) {\n    Object.assign(this, s);\n  }\n\n  pushState () {\n    this._log.push(this.state);\n  }\n\n  popState (): PatternCursorState {\n    const s = this._log.pop();\n    this.state = s;\n    return s;\n  }\n\n  bindBlock () {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.value.length;\n    }\n  }\n\n  _pushLeft(fn: () => boolean | undefined): boolean {\n    this.pushState();\n    for (this.bindBlock(); 0<=this.index; --this.index, this.offset=this.block?.value.length || 0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  _pushRight (fn: () => boolean | undefined): boolean {\n    this.pushState();\n    for (this.bindBlock(); this.index<this.masked._blocks.length; ++this.index, this.offset=0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  pushLeftBeforeFilled (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n\n  pushLeftBeforeInput (): boolean {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushLeftBeforeRequired (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushRightBeforeFilled (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n\n  pushRightBeforeInput (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n\n  pushRightBeforeRequired (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n","import ChangeDetails from '../../core/change-details';\nimport { DIRECTION, type Direction, isString } from '../../core/utils';\nimport { type TailDetails } from '../../core/tail-details';\nimport ContinuousTailDetails from '../../core/continuous-tail-details';\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base';\nimport type PatternBlock from './block';\n\n\nexport\ntype PatternFixedDefinitionOptions = Pick<PatternFixedDefinition, 'char' | 'isUnmasking' | 'eager'>;\n\nexport\ntype PatternFixedDefinitionState = MaskedState & Pick<PatternFixedDefinition, '_isRawInput'>;\n\n\nexport default\nclass PatternFixedDefinition implements PatternBlock {\n  /** */\n  declare _value: string;\n  /** */\n  declare char: string;\n  /** */\n  declare isUnmasking?: boolean;\n  /** */\n  declare eager: boolean | 'remove' | 'append';\n  /** */\n  declare _isRawInput?: boolean;\n  /** */\n  declare isFixed: boolean;\n\n  constructor(opts: PatternFixedDefinitionOptions) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  get unmaskedValue (): string {\n    return this.isUnmasking ? this.value : '';\n  }\n\n  get displayValue (): string {\n    return this.value;\n  }\n\n  reset () {\n    this._isRawInput = false;\n    this._value = '';\n  }\n\n  remove (fromPos: number=0, toPos: number=this._value.length): ChangeDetails {\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n\n    return new ChangeDetails();\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this._value.length;\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this._value.length): number {\n    return this._isRawInput ? (toPos - fromPos) : 0;\n  }\n\n  extractInput (fromPos: number=0, toPos: number=this._value.length, flags: ExtractFlags={}): string {\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return Boolean(this._value);\n  }\n\n  _appendChar (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled) return details;\n    const appendEager = this.eager === true || this.eager === 'append';\n\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return this._appendChar(this.char, { tail: true });\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n\n    this._value = details.inserted = this.char;\n    return details;\n  }\n\n  extractTail (fromPos: number=0, toPos: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails('');\n  }\n\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return (tail as TailDetails).appendTo(this);\n  }\n\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\n    const details = this._appendChar(str[0], flags);\n\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n\n    return details;\n  }\n\n  doCommit () {}\n\n  get state (): PatternFixedDefinitionState {\n    return {\n      _value: this._value,\n      _isRawInput: this._isRawInput,\n    };\n  }\n\n  set state (state: PatternFixedDefinitionState) {\n    Object.assign(this, state);\n  }\n}\n","import createMask, { type NormalizedOpts } from '../factory';\nimport type Masked from '../base';\nimport type MaskedPattern from '../pattern';\nimport { type TailDetails } from '../../core/tail-details';\nimport { type ExtractFlags, type AppendFlags } from '../base';\nimport ChangeDetails from '../../core/change-details';\nimport { DIRECTION, type Direction } from '../../core/utils';\nimport type PatternBlock from './block';\n\n\nexport\ntype PatternInputDefinitionOptions = NormalizedOpts & Partial<Pick<PatternInputDefinition,\n  | 'parent'\n  | 'isOptional'\n  | 'lazy'\n  | 'eager'\n  | 'placeholderChar'\n  | 'displayChar'\n>>;\n\nexport\ntype PatternInputDefinitionState = {\n  masked: Masked['state'],\n  isFilled: boolean,\n};\n\n\nexport default\nclass PatternInputDefinition implements PatternBlock {\n  static DEFAULT_DEFINITIONS: { [k: string]: RegExp } = {\n    '0': /\\d/,\n    'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\n    '*': /./\n  }\n\n  /** */\n  declare readonly masked: Masked;\n  /** */\n  declare parent: Masked;\n  /** */\n  declare isOptional: boolean;\n  /** */\n  declare isFilled: boolean;\n  /** */\n  declare lazy: MaskedPattern['lazy'];\n  /** */\n  declare eager: MaskedPattern['eager'];\n  /** */\n  declare placeholderChar: MaskedPattern['placeholderChar'];\n  /** */\n  declare displayChar: MaskedPattern['displayChar'];\n\n  constructor(opts: PatternInputDefinitionOptions) {\n    const { parent, isOptional, placeholderChar, displayChar, lazy, eager, ...maskOpts } = opts;\n\n    this.masked = createMask(maskOpts);\n    Object.assign(this, { parent, isOptional, placeholderChar, displayChar, lazy, eager });\n  }\n\n  reset () {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n\n    return new ChangeDetails();\n  }\n\n  get value (): string {\n    return this.masked.value ||\n      (this.isFilled && !this.isOptional ?\n        this.placeholderChar :\n        '');\n  }\n\n  get unmaskedValue (): string {\n    return this.masked.unmaskedValue;\n  }\n\n  get displayValue (): string {\n    return this.masked.value && this.displayChar || this.value;\n  }\n\n  get isComplete (): boolean {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n\n  _appendChar (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (this.isFilled) return new ChangeDetails();\n\n    const state = this.masked.state;\n    // simulate input\n    const details = this.masked._appendChar(ch, flags);\n\n    if (details.inserted && this.doValidate(flags) === false) {\n      details.inserted = details.rawInserted = '';\n      this.masked.state = state;\n    }\n\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n\n    return details;\n  }\n\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, flags, tail);\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled || this.isOptional) return details;\n\n    this.isFilled = true;\n    details.inserted = this.placeholderChar;\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  extractTail (fromPos?: number, toPos?: number): TailDetails {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n\n  appendTail (tail: string | TailDetails): ChangeDetails {\n    return this.masked.appendTail(tail);\n  }\n\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags?: ExtractFlags): string {\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default: return boundPos;\n    }\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this.value.length): number {\n    return this.value.slice(fromPos, toPos).length;\n  }\n\n  doValidate (flags: AppendFlags): boolean {\n    return this.masked.doValidate(flags) && (\n      !this.parent || this.parent.doValidate(flags));\n  }\n\n  doCommit () {\n    this.masked.doCommit();\n  }\n\n  get state (): PatternInputDefinitionState {\n    return {\n      masked: this.masked.state,\n      isFilled: this.isFilled,\n    };\n  }\n\n  set state (state: PatternInputDefinitionState) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n}\n","import Masked, { type MaskedOptions } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedRegExpOptions = MaskedOptions<MaskedRegExp>;\n\n/** Masking by RegExp */\nexport default\nclass MaskedRegExp extends Masked<string> {\n  declare mask: RegExp;\n\n  override updateOptions (opts: Partial<MaskedRegExpOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedRegExpOptions>) {\n    if (opts.mask) opts.validate = (value) => value.search(opts.mask) >= 0;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedRegExp = MaskedRegExp;\n","import exp from 'constants';\nimport ChangeDetails from '../core/change-details';\nimport IMask from '../core/holder';\nimport { type TailDetails } from '../core/tail-details';\nimport { DIRECTION, type Direction } from '../core/utils';\nimport Masked, { type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './base';\nimport createMask, { type FactoryOpts, normalizeOpts } from './factory';\nimport type PatternBlock from './pattern/block';\nimport ChunksTailDetails from './pattern/chunk-tail-details';\nimport PatternCursor from './pattern/cursor';\nimport PatternFixedDefinition from './pattern/fixed-definition';\nimport PatternInputDefinition from './pattern/input-definition';\nimport './regexp'; // support for default definitions which are regexp's\n\n\nexport\ntype MaskedPatternOptions<Value=string, M extends MaskedPattern<Value>=MaskedPattern<Value>, Props extends keyof M=never> = MaskedOptions<M,\n  | 'definitions'\n  | 'blocks'\n  | 'placeholderChar'\n  | 'displayChar'\n  | 'lazy'\n  | Props\n>;\n\nexport\ntype Definitions = {\n  [k: string]: FactoryOpts,\n};\n\nexport\ntype MaskedPatternState = MaskedState & {\n  _blocks: Array<any>,\n};\n\nexport\ntype BlockPosData = {\n  index: number,\n  offset: number,\n};\n\n\n/**\n  Pattern mask\n*/\nexport default\nclass MaskedPattern<Value=string> extends Masked<Value> {\n  static DEFAULTS: Partial<MaskedPatternOptions> = {\n    lazy: true,\n    placeholderChar: '_'\n  };\n  static STOP_CHAR = '`';\n  static ESCAPE_CHAR = '\\\\';\n  static InputDefinition = PatternInputDefinition;\n  static FixedDefinition = PatternFixedDefinition;\n\n  declare mask: string;\n  /** */\n  declare blocks: { [key: string]: FactoryOpts };\n  /** */\n  declare definitions: Definitions;\n  /** Single char for empty input */\n  declare placeholderChar: string;\n  /** Single char for filled input */\n  declare displayChar: string;\n  /** Show placeholder only when needed */\n  declare lazy: boolean;\n\n  declare _blocks: Array<PatternBlock>;\n  declare _maskedBlocks: {[key: string]: Array<number>};\n  declare _stops: Array<number>;\n\n  constructor (opts: MaskedPatternOptions<Value>) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts?.definitions),\n    } as MaskedOptions);\n  }\n\n  override updateOptions (opts: Partial<MaskedPatternOptions<Value>>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedPatternOptions<Value>>) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n\n  _rebuildMask () {\n    const defs = this.definitions;\n    this._blocks = [];\n    this._stops = [];\n    this._maskedBlocks = {};\n\n    let pattern = this.mask;\n    if (!pattern || !defs) return;\n\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n\n    for (let i=0; i<pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const maskedBlock = createMask({\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            ...normalizeOpts(this.blocks[bName]),\n            parent: this,\n          });\n\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n\n          i += bName.length - 1;\n          continue;\n        }\n      }\n\n      let char = pattern[i];\n      let isInput = char in defs;\n\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n\n      const def = isInput ?\n        new PatternInputDefinition({\n          isOptional: optionalBlock,\n          lazy: this.lazy,\n          eager: this.eager,\n          placeholderChar: this.placeholderChar,\n          displayChar: this.displayChar,\n          ...normalizeOpts(defs[char]),\n          parent: this,\n        } as any) :\n        new PatternFixedDefinition({\n          char,\n          eager: this.eager,\n          isUnmasking: unmaskingBlock,\n        });\n\n      this._blocks.push(def);\n    }\n  }\n\n  get state (): MaskedPatternState {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state),\n    };\n  }\n\n  set state (state: MaskedPatternState) {\n    const {_blocks, ...maskedState} = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n\n  reset () {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n\n  get isComplete (): boolean {\n    return this._blocks.every(b => b.isComplete);\n  }\n\n  get isFilled (): boolean {\n    return this._blocks.every(b => b.isFilled);\n  }\n\n  get isFixed (): boolean {\n    return this._blocks.every(b => b.isFixed);\n  }\n\n  get isOptional (): boolean {\n    return this._blocks.every(b => b.isOptional);\n  }\n\n  doCommit () {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n\n  get unmaskedValue (): string {\n    return this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  get value (): string {\n    // TODO return _value when not in change?\n    return this._blocks.reduce((str, b) => str += b.value, '');\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  get displayValue (): string {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n\n  _appendEager (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    let startBlockIndex = this._mapPosToBlock(this.value.length)?.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n\n    for (let bi=startBlockIndex; bi<this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n\n      details.aggregate(d);\n    }\n\n    return details;\n  }\n\n  _appendCharRaw (ch: string, flags: AppendFlags<MaskedPatternState>={}): ChangeDetails {\n    const blockIter = this._mapPosToBlock(this.value.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n\n    for (let bi=blockIter.index; ; ++bi) {\n      const block = this._blocks[bi];\n      if (!block) break;\n\n      const blockDetails = block._appendChar(ch, { ...flags, _beforeTailState: flags._beforeTailState?._blocks?.[bi] });\n\n      const skip = blockDetails.skip;\n      details.aggregate(blockDetails);\n\n      if (skip || blockDetails.rawInserted) break; // go next char\n    }\n\n    return details;\n  }\n\n  extractTail (fromPos: number=0, toPos: number=this.value.length): ChunksTailDetails {\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n\n      chunkTail.extend(blockChunk);\n    });\n\n    return chunkTail;\n  }\n\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags: ExtractFlags={}): string {\n    if (fromPos === toPos) return '';\n\n    let input = '';\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n\n    return input;\n  }\n\n  _findStopBefore (blockIndex: number): number | undefined {\n    let stopBefore;\n    for (let si=0; si<this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;\n      else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder (toBlockIndex?: number): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n\n    const startBlockIter = this._mapPosToBlock(this.value.length);\n    if (!startBlockIter) return details;\n\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n\n    this._blocks.slice(startBlockIndex, endBlockIndex)\n      .forEach(b => {\n        if (!b.lazy || toBlockIndex != null) {\n          const bDetails = b._appendPlaceholder((b as MaskedPattern)._blocks?.length);\n          this._value += bDetails.inserted;\n          details.aggregate(bDetails);\n        }\n      });\n\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock (pos: number): BlockPosData | undefined {\n    let accVal = '';\n    for (let bi=0; bi<this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n\n      accVal += block.value;\n\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos,\n        };\n      }\n    }\n  }\n\n  _blockStartPos (blockIndex: number): number {\n    return this._blocks\n      .slice(0, blockIndex)\n      .reduce((pos, b) => pos += b.value.length, 0);\n  }\n\n  _forEachBlocksInRange (fromPos: number, toPos: number=this.value.length, fn: (block: PatternBlock, blockIndex: number, fromPos: number, toPos: number) => void) {\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ?\n        toBlockIter.offset :\n        this._blocks[fromBlockIter.index].value.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi=fromBlockIter.index+1; bi<toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.value.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      // cursor.popState();\n      // if (\n      //   cursor.pushRightBeforeInput() &&\n      //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\n      //   (!this.lazy || this.extractInput())\n      // ) return cursor.pos;\n\n      return 0;\n    }\n\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.value.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n\n    return cursorPos;\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this.value.length): number {\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock (name: string): PatternBlock | undefined {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks (name: string): Array<PatternBlock> {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\n\n\nIMask.MaskedPattern = MaskedPattern;\n","import ChangeDetails from '../core/change-details';\nimport IMask from '../core/holder';\nimport { type AppendFlags } from './base';\nimport MaskedPattern, { type MaskedPatternOptions } from './pattern';\n\n\nexport\ntype MaskedRangeOptions = Omit<MaskedPatternOptions, 'mask'> &\n  Pick<MaskedRange, 'maxLength' | 'from' | 'to' | 'autofix'>;\n\ntype MaskedRangePatternOptions = MaskedPatternOptions &\n  Pick<MaskedRange, 'maxLength' | 'from' | 'to' | 'autofix'>;\n\n\n/** Pattern which accepts ranges */\nexport default\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n  declare maxLength?: number;\n  /** Min bound */\n  declare from: number;\n  /** Max bound */\n  declare to: number;\n  /** */\n  declare autofix?: boolean | 'pad';\n\n  get _matchFrom (): number {\n    return this.maxLength - String(this.from).length;\n  }\n\n  constructor (opts?: MaskedRangeOptions) {\n    super(opts as MaskedPatternOptions); // mask will be created in _update\n  }\n\n  override updateOptions (opts: Partial<MaskedRangeOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedRangeOptions>) {\n    const {\n      to=this.to || 0,\n      from=this.from || 0,\n      maxLength=this.maxLength || 0,\n      autofix=this.autofix,\n      ...patternOpts\n    }: Partial<MaskedRangePatternOptions> = opts;\n\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n\n    super._update(patternOpts);\n  }\n\n  override get isComplete (): boolean {\n    return super.isComplete && Boolean(this.value);\n  }\n\n  boundaries (str: string): [string, string] {\n    let minstr = '';\n    let maxstr = '';\n\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n\n    return [minstr, maxstr];\n  }\n\n  override doPrepareChar (ch: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    let details: ChangeDetails;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n\n    if (!this.autofix || !ch) return [ch, details];\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n\n    let nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return ['', details];\n\n    const [minstr, maxstr] = this.boundaries(nextVal);\n\n    if (Number(maxstr) < this.from) return [fromStr[nextVal.length - 1], details];\n\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1]+ch, flags))];\n      }\n      return [toStr[nextVal.length - 1], details];\n    }\n\n    return [ch, details];\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    const str = this.value;\n\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n\n    const [minstr, maxstr] = this.boundaries(str);\n\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to &&\n      super.doValidate(flags);\n  }\n}\n\n\nIMask.MaskedRange = MaskedRange;\n","import MaskedPattern, { type MaskedPatternOptions } from './pattern';\nimport { type MaskedRangeOptions } from './range';\nimport MaskedRange from './range';\nimport IMask from '../core/holder';\nimport { type AppendFlags } from './base';\nimport { isString } from '../core/utils';\n\n\nexport\ntype DateMaskType = DateConstructor;\n\ntype DateOptionsKeys =\n  | 'pattern'\n  | 'min'\n  | 'max'\n  | 'autofix'\n;\n\nexport\ntype MaskedDateOptions<Value=Date> =\n  Omit<MaskedPatternOptions<Value>, 'mask'> &\n  Partial<Pick<MaskedDate<Value>, DateOptionsKeys>> &\n  { mask?: string | DateMaskType }\n;\n\n/** Date mask */\nexport default\nclass MaskedDate<Value=Date> extends MaskedPattern<Value> {\n  static GET_DEFAULT_BLOCKS: () => { [k: string]: MaskedRangeOptions } = () => ({\n    d: {\n      mask: MaskedRange,\n      from: 1,\n      to: 31,\n      maxLength: 2,\n    },\n    m: {\n      mask: MaskedRange,\n      from: 1,\n      to: 12,\n      maxLength: 2,\n    },\n    Y: {\n      mask: MaskedRange,\n      from: 1900,\n      to: 9999,\n    }\n  });\n  static DEFAULTS: Partial<MaskedPatternOptions<any, MaskedDate<any>, DateOptionsKeys>> = {\n    mask: Date as any,\n    pattern: 'd{.}`m{.}`Y',\n    format: (date: Date) => {\n      if (!date) return '';\n\n      const day = String(date.getDate()).padStart(2, '0');\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const year = date.getFullYear();\n\n      return [day, month, year].join('.');\n    },\n    parse: (str: string) => {\n      const [day, month, year] = str.split('.').map(Number);\n      return new Date(year, month - 1, day);\n    },\n  };\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n  declare pattern: string;\n  /** Start date */\n  declare min?: Date;\n  /** End date */\n  declare max?: Date;\n  /** */\n  declare autofix?: boolean | 'pad' | undefined;\n\n  constructor (opts?: MaskedDateOptions<Value>) {\n    const { mask, pattern, ...patternOpts } = {\n      ...(MaskedDate.DEFAULTS as MaskedDateOptions<Value>),\n      ...opts,\n    };\n\n    super({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n    });\n  }\n\n  override updateOptions (opts: Partial<MaskedDateOptions<Value>>) {\n    super.updateOptions(opts as Partial<MaskedPatternOptions<Value>>);\n  }\n\n  override _update (opts: Partial<MaskedDateOptions<Value>>) {\n    const { mask, pattern, blocks, ...patternOpts } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts,\n    };\n\n    let patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to\n    ) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(patternBlocks).forEach(bk => {\n      const b = patternBlocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks,\n    });\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    const date = this.date;\n\n    return super.doValidate(flags) &&\n      (!this.isComplete ||\n        this.isDateExist(this.value) && date != null &&\n        (this.min == null || this.min <= date) &&\n        (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist (str: string): boolean {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date (): Value | null {\n    return this.typedValue;\n  }\n  set date (date: Value) {\n    this.typedValue = date;\n  }\n\n  override get typedValue (): Value | null {\n    return this.isComplete ? super.typedValue : null;\n  }\n  override set typedValue (value: Value) {\n    super.typedValue = value;\n  }\n\n  override maskEquals (mask: any): boolean {\n    return mask === Date || super.maskEquals(mask);\n  }\n}\n\n\nIMask.MaskedDate = MaskedDate;\n","import { objectIncludes } from '../core/utils';\nimport ChangeDetails from '../core/change-details';\nimport createMask, { type FactoryArg } from './factory';\nimport Masked, { type AppendFlags, type MaskedState, type MaskedOptions, type ExtractFlags } from './base';\nimport { DIRECTION, type Direction } from '../core/utils';\nimport { type TailDetails } from '../core/tail-details';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedDynamicState = MaskedState & {\n  _rawInputValue: string,\n  compiledMasks: Array<MaskedState>,\n  currentMaskRef?: Masked,\n  currentMask: MaskedState,\n};\n\nexport\ntype DynamicMaskType = Array<FactoryArg> | ArrayConstructor;\n\nexport\ntype MaskedDynamicOptions = MaskedOptions<MaskedDynamic, 'dispatch'>;\n\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nexport default\nclass MaskedDynamic<Value=any> extends Masked<Value> {\n  static DEFAULTS: Partial<MaskedDynamicOptions>;\n\n  declare mask: DynamicMaskType;\n  // TODO types\n  /** Currently chosen mask */\n  declare currentMask?: Masked;\n  /** Compliled {@link Masked} options */\n  declare compiledMasks: Array<Masked>; // TODO FactoryReturnMasked<?>\n  /** Chooses {@link Masked} depending on input value */\n  declare dispatch: (appended: string, masked: MaskedDynamic, flags: AppendFlags<MaskedDynamicState>, tail: string | String | TailDetails) => Masked;\n\n  constructor (opts?: MaskedDynamicOptions) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n\n    this.currentMask = null;\n  }\n\n  override updateOptions (opts: Partial<MaskedDynamicOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedDynamicOptions>) {\n    super._update(opts);\n    if ('mask' in opts) {\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ?\n        opts.mask.map(m => createMask(m)) :\n        [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n\n  override _appendCharRaw (ch: string, flags: AppendFlags<MaskedDynamicState>={}): ChangeDetails {\n    const details = this._applyDispatch(ch, flags);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n\n    return details;\n  }\n\n  _applyDispatch (appended: string='', flags: AppendFlags<MaskedDynamicState>={}, tail: string | String | TailDetails = ''): ChangeDetails {\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._value :\n      this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._rawInputValue :\n      inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n\n    const prevMaskState = prevMask?.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, { ...flags }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n\n        if (insertValue) {\n          const d = this.currentMask.append(insertValue, {raw: true});\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n        }\n\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {raw: true, tail: true}).tailShift;\n        }\n      } else {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n\n    return details;\n  }\n\n  override _appendPlaceholder (): ChangeDetails {\n    const details = this._applyDispatch();\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n\n    return details;\n  }\n\n  override _appendEager (): ChangeDetails {\n    const details = this._applyDispatch();\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n\n    return details;\n  }\n\n  override appendTail (tail: string | String | TailDetails): ChangeDetails {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n\n    return details.aggregate(this.currentMask ?\n      this.currentMask.appendTail(tail) :\n      super.appendTail(tail));\n  }\n\n  currentMaskFlags (flags: AppendFlags<MaskedDynamicState>): AppendFlags {\n    return {\n      ...flags,\n      _beforeTailState: flags._beforeTailState?.currentMaskRef === this.currentMask && flags._beforeTailState?.currentMask ||\n        flags._beforeTailState,\n    };\n  }\n\n  doDispatch(appended: string, flags: AppendFlags<MaskedDynamicState>={}, tail: string | String | TailDetails=''): Masked | undefined {\n    return this.dispatch(appended, this, flags, tail);\n  }\n\n  override doValidate (flags: AppendFlags<MaskedDynamicState>): boolean {\n    return super.doValidate(flags) && (\n      !this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags))\n    );\n  }\n\n  override doPrepare (str: string, flags: AppendFlags<MaskedDynamicState>={}): [string, ChangeDetails] {\n    let [s, details] = super.doPrepare(str, flags);\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags)));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  override doPrepareChar (str: string, flags: AppendFlags<MaskedDynamicState>={}): [string, ChangeDetails] {\n    let [s, details] = super.doPrepareChar(str, flags);\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags)));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  override reset () {\n    this.currentMask?.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n\n  override get value (): string {\n    return this.currentMask ? this.currentMask.value : '';\n  }\n\n  override set value (value: string) {\n    super.value = value;\n  }\n\n  override get unmaskedValue (): string {\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n\n  override set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  override get typedValue (): Value {\n    return this.currentMask ? this.currentMask.typedValue : '';\n  }\n\n  // probably typedValue should not be used with dynamic\n  override set typedValue (value: Value) {\n    let unmaskedValue = String(value);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = value;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n\n  override get displayValue (): string {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n\n  override get isComplete (): boolean {\n    return Boolean(this.currentMask?.isComplete);\n  }\n\n  override get isFilled (): boolean {\n    return Boolean(this.currentMask?.isFilled);\n  }\n\n  override remove (fromPos?: number, toPos?: number): ChangeDetails {\n    const details: ChangeDetails = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n        // update with dispatch\n        .aggregate(this._applyDispatch());\n    }\n\n    return details;\n  }\n\n  override get state (): MaskedDynamicState {\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: this.currentMask?.state,\n    };\n  }\n\n  override set state (state: MaskedDynamicState) {\n    const {compiledMasks, currentMaskRef, currentMask, ...maskedState} = state;\n    this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n\n  override extractInput (fromPos?: number, toPos?: number, flags?: ExtractFlags): string {\n    return this.currentMask ?\n      this.currentMask.extractInput(fromPos, toPos, flags) :\n      '';\n  }\n\n  override extractTail (fromPos?: number, toPos?: number): TailDetails {\n    return this.currentMask ?\n      this.currentMask.extractTail(fromPos, toPos) :\n      super.extractTail(fromPos, toPos);\n  }\n\n  override doCommit () {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n\n  override nearestInputPos(cursorPos: number, direction?: Direction): number {\n    return this.currentMask ?\n      this.currentMask.nearestInputPos(cursorPos, direction) :\n      super.nearestInputPos(cursorPos, direction);\n  }\n\n  // @ts-ignore i don't mind overriding\n  override get overwrite (): boolean | 'shift' | undefined {\n    return this.currentMask ?\n      this.currentMask.overwrite :\n      super.overwrite;\n  }\n\n  override set overwrite (overwrite: boolean | 'shift') {\n    console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  // @ts-ignore i don't mind overriding\n  override get eager (): boolean | 'remove' | 'append' | undefined {\n    return this.currentMask ?\n      this.currentMask.eager :\n      super.eager;\n  }\n\n  override set eager (eager: boolean | 'remove' | 'append') {\n    console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  // @ts-ignore i don't mind overriding\n  override get skipInvalid (): boolean | undefined {\n    return this.currentMask ?\n      this.currentMask.skipInvalid :\n      super.skipInvalid;\n  }\n\n  override set skipInvalid (skipInvalid: boolean | undefined) {\n    if (this._initialized || skipInvalid !== Masked.DEFAULTS.skipInvalid) {\n      console.warn('\"skipInvalid\" option is not available in dynamic mask, use this option in siblings');\n    }\n  }\n\n  override maskEquals (mask: any): boolean {\n    return Array.isArray(mask) ?\n      this.compiledMasks.every((m, mi) => {\n        if (!mask[mi]) return;\n\n        const { mask: oldMask, ...restOpts } = mask[mi];\n        return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n      }) : super.maskEquals(mask);\n  }\n\n  override typedValueEquals (value: any): boolean {\n    return Boolean(this.currentMask?.typedValueEquals(value));\n  }\n}\n\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.value.length : m.nearestInputPos(m.value.length, DIRECTION.FORCE_LEFT);\n\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, { raw: true });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(\n          0,\n          Math.max(startInputPos, m.nearestInputPos(m.value.length, DIRECTION.FORCE_LEFT)),\n        ),\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\n\n\nIMask.MaskedDynamic = MaskedDynamic;\n","import MaskedPattern, { type MaskedPatternOptions } from './pattern';\nimport { AppendFlags } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedEnumOptions = Omit<MaskedPatternOptions, 'mask'> & Pick<MaskedEnum, 'enum'>;\n\nexport\ntype MaskedEnumPatternOptions = MaskedPatternOptions & Partial<Pick<MaskedEnum, 'enum'>>;\n\n\n/** Pattern which validates enum values */\nexport default\nclass MaskedEnum extends MaskedPattern {\n  declare enum: Array<string>;\n\n  override updateOptions (opts: Partial<MaskedEnumOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedEnumOptions>) {\n    const { enum: _enum, ...eopts }: MaskedEnumPatternOptions = opts;\n    this.enum = this.enum;\n    if (_enum) eopts.mask = '*'.repeat(_enum[0].length);\n\n    super._update(eopts);\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) &&\n      super.doValidate(flags);\n  }\n}\n\n\nIMask.MaskedEnum = MaskedEnum;\n","import Masked, { type MaskedOptions } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedFunctionOptions = MaskedOptions<MaskedFunction>;\n\n/** Masking by custom Function */\nexport default\nclass MaskedFunction<Value=any> extends Masked<Value> {\n  declare mask: (value: string, masked: this) => boolean;\n  override updateOptions (opts: Partial<MaskedFunctionOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedFunctionOptions>) {\n    super._update({\n      ...opts,\n      validate: opts.mask,\n    });\n  }\n}\n\n\nIMask.MaskedFunction = MaskedFunction;\n","import { escapeRegExp, type Direction, DIRECTION } from '../core/utils';\nimport ChangeDetails from '../core/change-details';\nimport { type TailDetails } from '../core/tail-details';\n\nimport Masked, { type MaskedOptions, type ExtractFlags, type AppendFlags } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedNumberOptions = MaskedOptions<MaskedNumber,\n  | 'radix'\n  | 'thousandsSeparator'\n  | 'mapToRadix'\n  | 'scale'\n  | 'min'\n  | 'max'\n  | 'normalizeZeros'\n  | 'padFractionalZeros'\n>;\n\n/**\n  Number mask\n*/\nexport default\nclass MaskedNumber extends Masked<number> {\n  static UNMASKED_RADIX = '.';\n  static EMPTY_VALUES: Array<null | undefined | string | number> = [...Masked.EMPTY_VALUES, 0];\n  static DEFAULTS: Partial<MaskedNumberOptions> = {\n    mask: Number,\n    radix: ',',\n    thousandsSeparator: '',\n    mapToRadix: [MaskedNumber.UNMASKED_RADIX],\n    min: Number.MIN_SAFE_INTEGER,\n    max: Number.MAX_SAFE_INTEGER,\n    scale: 2,\n    normalizeZeros: true,\n    padFractionalZeros: false,\n    parse: Number,\n    format: (n: number) => n.toLocaleString('en-US', { useGrouping: false, maximumFractionDigits: 20 }),\n  };\n\n  declare mask: NumberConstructor;\n  /** Single char */\n  declare radix: string;\n  /** Single char */\n  declare thousandsSeparator: string;\n  /** Array of single chars */\n  declare mapToRadix: Array<string>;\n  /** */\n  declare min: number;\n  /** */\n  declare max: number;\n  /** Digits after point */\n  declare scale: number;\n  /** Flag to remove leading and trailing zeros in the end of editing */\n  declare normalizeZeros: boolean;\n  /** Flag to pad trailing zeros after point in the end of editing */\n  declare padFractionalZeros: boolean;\n\n  declare _numberRegExp: RegExp;\n  declare _thousandsSeparatorRegExp: RegExp;\n  declare _mapToRadixRegExp: RegExp;\n  declare _separatorsProcessed: boolean;\n\n  constructor (opts?: MaskedNumberOptions) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts,\n    });\n  }\n\n  override updateOptions (opts: Partial<MaskedNumberOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedNumberOptions>) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n\n  _updateRegExps () {\n    let start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    let mid = '\\\\d*';\n    let end = (this.scale ?\n      `(${escapeRegExp(this.radix)}\\\\d{0,${this.scale}})?` :\n      '') + '$';\n\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(`[${this.mapToRadix.map(escapeRegExp).join('')}]`, 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n\n  _removeThousandsSeparators (value: string): string {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n\n  _insertThousandsSeparators (value: string): string {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n\n  override doPrepareChar (ch: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    ch = this._removeThousandsSeparators(\n      this.scale && this.mapToRadix.length && (\n        /*\n          radix should be mapped when\n          1) input is done from keyboard = flags.input && flags.raw\n          2) unmasked value is set = !flags.input && !flags.raw\n          and should not be mapped when\n          1) value is set = flags.input && !flags.raw\n          2) raw value is set = !flags.input && flags.raw\n        */\n        flags.input && flags.raw ||\n        !flags.input && !flags.raw\n      ) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch\n    );\n    const [prepCh, details] = super.doPrepareChar(ch, flags);\n    if (ch && !prepCh) details.skip = true;\n    return [prepCh, details];\n  }\n\n  _separatorsCount (to: number, extendOnSeparators: boolean=false): number {\n    let count = 0;\n\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n\n    return count;\n  }\n\n  _separatorsCountFromSlice (slice: string=this._value): number {\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n\n  override extractInput (fromPos: number=0, toPos: number=this.value.length, flags?: ExtractFlags): string {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n\n  \n  override _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n\n    const appendDetails = super._appendCharRaw(ch, flags);\n\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n    return appendDetails;\n  }\n\n  _findSeparatorAround (pos: number): number {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n\n    return -1;\n  }\n\n  _adjustRangeWithSeparators (from: number, to: number): [number, number] {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n\n  \n  override remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length,\n    });\n  }\n\n  override nearestInputPos (cursorPos: number, direction?: Direction): number {\n    if (!this.thousandsSeparator) return cursorPos;\n\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT: {\n        const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n        if (separatorAtLeftPos >= 0) {\n          const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n          if (cursorPos < separatorAtLeftEndPos ||\n            this.value.length <= separatorAtLeftEndPos ||\n            direction === DIRECTION.FORCE_LEFT\n          ) {\n            return separatorAtLeftPos;\n          }\n        }\n        break;\n      }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT: {\n        const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n        if (separatorAtRightPos >= 0) {\n          return separatorAtRightPos + this.thousandsSeparator.length;\n        }\n      }\n    }\n\n    return cursorPos;\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    // validate as string\n    let valid = Boolean(this._removeThousandsSeparators(this.value).match(this._numberRegExp));\n\n    if (valid) {\n      // validate as number\n      const number = this.number;\n      valid = valid && !isNaN(number) &&\n        // check min bound for negative values\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\n        // check max bound for positive values\n        (this.max == null || this.max <= 0 || this.number <= this.max);\n    }\n\n    return valid && super.doValidate(flags);\n  }\n\n  override doCommit () {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n\n      let formatted = this.value;\n\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n\n      this._value = formatted;\n    }\n\n    super.doCommit();\n  }\n\n  _normalizeZeros (value: string): string {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\n      if (!parts[1].length) parts.length = 1;  // remove fractional\n    }\n\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n\n  _padFractionalZeros (value: string): string {\n    if (!value) return value;\n\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (\n      ch === this.radix ||\n      ch === MaskedNumber.UNMASKED_RADIX ||\n      this.mapToRadix.includes(ch)\n    )\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n\n  override get unmaskedValue (): string {\n    return this._removeThousandsSeparators(\n      this._normalizeZeros(\n        this.value))\n      .replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n\n  override set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  override get typedValue (): number {\n    return this.parse(this.unmaskedValue, this);\n  }\n\n  override set typedValue (n: number) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number (): number {\n    return this.typedValue;\n  }\n\n  set number (number: number) {\n    this.typedValue = number;\n  }\n\n  /**\n    Is negative allowed\n  */\n  get allowNegative (): boolean {\n    return (this.min != null && this.min < 0) || (this.max != null && this.max < 0);\n  }\n\n  override typedValueEquals (value: any): boolean {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (\n      super.typedValueEquals(value) ||\n      MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)\n    ) && !(value === 0 && this.value === '');\n  }\n}\n\n\nIMask.MaskedNumber = MaskedNumber;\n","import createMask, { type FactoryArg } from './factory';\nimport IMask from '../core/holder';\n\n\n// TODO use enum?\n/** Mask pipe source and destination types */\nexport\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue',\n} as const;\n\ntype ValueOf<T> = T[keyof T];\n\n/** Creates new pipe function depending on mask type, source and destination options */\nexport\nfunction createPipe<Opts extends FactoryArg> (\n  mask: Opts,\n  from: ValueOf<typeof PIPE_TYPE>=PIPE_TYPE.MASKED,\n  to: ValueOf<typeof PIPE_TYPE>=PIPE_TYPE.MASKED\n) {\n  const masked = createMask(mask);\n  return (value: any) => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nexport\nfunction pipe<Opts extends FactoryArg> (value: any, mask: Opts, from?: ValueOf<typeof PIPE_TYPE>, to?: ValueOf<typeof PIPE_TYPE>) {\n  return createPipe(mask, from, to)(value);\n}\n\n\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n","import IMask from './imask';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element';\nexport { default as HTMLInputMaskElement, type InputElement } from './controls/html-input-mask-element';\nexport { default as HTMLMaskElement } from './controls/html-mask-element';\nexport { default as InputMask, type InputMaskElement } from './controls/input';\nexport { default as MaskElement } from './controls/mask-element';\nexport { default as ChangeDetails, type ChangeDetailsOptions } from './core/change-details';\nexport { type AppendTail, type TailDetails } from './core/tail-details';\nexport { DIRECTION, forceDirection, type Direction, type Selection } from './core/utils';\nexport { default as Masked, type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './masked/base';\nexport { default as MaskedDate, type DateMaskType, type MaskedDateOptions } from './masked/date';\nexport { default as MaskedDynamic, type DynamicMaskType, type MaskedDynamicOptions, type MaskedDynamicState } from './masked/dynamic';\nexport { default as MaskedEnum, type MaskedEnumOptions } from './masked/enum';\nexport {\n    default as createMask,\n    normalizeOpts,\n    type AllFactoryStaticOpts,\n    type FactoryArg,\n    type FactoryConstructorOpts,\n    type FactoryConstructorReturnMasked,\n    type FactoryInstanceOpts,\n    type FactoryInstanceReturnMasked,\n    type FactoryOpts,\n    type FactoryReturnMasked,\n    type FactoryStaticOpts,\n    type FactoryStaticReturnMasked,\n    type NormalizedOpts\n} from './masked/factory';\nexport { default as MaskedFunction, type MaskedFunctionOptions } from './masked/function';\nexport { default as MaskedNumber, type MaskedNumberOptions } from './masked/number';\nexport { default as MaskedPattern, type BlockPosData, type Definitions, type MaskedPatternOptions, type MaskedPatternState } from './masked/pattern';\nexport { type default as PatternBlock } from './masked/pattern/block';\nexport { default as ChunksTailDetails, type ChunksTailState } from './masked/pattern/chunk-tail-details';\nexport { default as PatternFixedDefinition, type PatternFixedDefinitionOptions, type PatternFixedDefinitionState } from './masked/pattern/fixed-definition';\nexport { default as PatternInputDefinition, type PatternInputDefinitionOptions, type PatternInputDefinitionState } from './masked/pattern/input-definition';\nexport { createPipe, pipe, PIPE_TYPE } from './masked/pipe';\nexport { default as MaskedRange, type MaskedRangeOptions } from './masked/range';\nexport { default as MaskedRegExp, type MaskedRegExpOptions } from './masked/regexp';\n\ntry {\n  (globalThis as any).IMask = IMask;\n} catch(e) {}\nexport default IMask;\n"],"names":["isString","str","String","isObject","obj","_obj$constructor","constructor","name","pick","keys","Array","isArray","_","k","includes","Object","entries","reduce","acc","_ref","v","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","forceDirection","direction","escapeRegExp","replace","objectIncludes","b","a","arrA","arrB","i","length","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","hasOwnProperty","call","ActionDetails","opts","assign","value","slice","startChangePos","oldValue","oldSelection","start","Math","min","cursorPos","insertedCount","inserted","substr","removedCount","max","end","removed","head","substring","tail","removeDirection","IMask","el","InputMask","maskedClass","mask","Error","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Masked","Function","MaskedFunction","console","warn","normalizeOpts","undefined","instanceOpts","_mask","startsWith","createMask","nOpts","MaskedClass","MaskElement","selectionStart","_unsafeSelectionStart","e","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","bindEvents","handlers","unbindEvents","HTMLMaskElement","input","_handlers","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","activeElement","forEach","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","commit","HTMLInputMaskElement","setSelectionRange","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","isContentEditable","tagName","masked","_listeners","_value","_unmaskedValue","_saveSelection","bind","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","maskEquals","_this$masked","updateOptions","unmaskedValue","updateControl","typedValue","val","typedValueEquals","displayValue","_unbindEvents","_fireEvent","ev","listeners","l","_cursorChanging","_changingCursorPos","pos","_selection","newUnmaskedValue","newValue","newDisplayValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","isComplete","clearTimeout","nearestInputPos","on","push","off","hIndex","indexOf","splice","details","oldRawValue","rawInputValue","offset","raw","doCommit","preventDefault","stopPropagation","destroy","ChangeDetails","normalize","prep","rawInserted","skip","tailShift","aggregate","ContinuousTailDetails","from","stop","extend","appendTo","append","_appendPlaceholder","state","unshift","beforePos","shiftChar","shift","_update","DEFAULTS","_initialized","withValueRefresh","reset","resolve","flags","parse","format","extractInput","isFilled","totalInputPositions","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","checkTail","consistentState","doPrepareChar","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","_beforeTailState","doPrepare","ci","d","doSkipInvalid","eager","remove","fn","_refreshing","rawInput","ret","runIsolated","_isolated","Boolean","skipInvalid","prepare","prepareChar","validate","parent","deleteCount","tailPos","eagerRemove","valLength","tval","EMPTY_VALUES","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","phDetails","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","_log","ok","block","_blockStartPos","s","pushState","popState","pop","bindBlock","_pushLeft","_this$block","_pushRight","pushLeftBeforeFilled","isFixed","pushLeftBeforeInput","pushLeftBeforeRequired","isOptional","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","PatternFixedDefinition","isUnmasking","_isRawInput","minPos","maxPos","appendEager","char","isResolved","PatternInputDefinition","placeholderChar","displayChar","lazy","maskOpts","boundPos","DEFAULT_DEFINITIONS","search","definitions","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","bi","every","_this$_mapPosToBlock","startBlockIndex","blockIter","_flags$_beforeTailSta","_flags$_beforeTailSta2","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","_blocks2","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","total","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_matchFrom","maxLength","to","autofix","patternOpts","fromStr","padStart","toStr","sameCharsCount","repeat","boundaries","minstr","maxstr","placeholder","num","match","padEnd","nextVal","firstNonZero","patternBlocks","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","bk","date","isDateExist","day","month","year","split","currentMask","compiledMasks","_applyDispatch","currentMaskFlags","prevValueBeforeTail","inputValue","insertValue","_rawInputValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","oldMask","_this$currentMask5","inputs","isCurrent","startInputPos","weight","i1","i2","MaskedEnum","enum","_enum","eopts","some","_updateRegExps","allowNegative","mid","scale","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","appendDetails","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","number","isNaN","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","UNMASKED_RADIX","n","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","toLocaleString","useGrouping","maximumFractionDigits","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","pipe","globalThis"],"mappings":"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AEnE;EACA,IAAA,OACE,CAAC,IAAI,CAACkC,YAAY,CAACU,GAAG,KAAK,IAAI,CAACN,SAAS,IAAI,IAAI,CAACJ,YAAY,CAACC,KAAK,KAAK,IAAI,CAACG,SAAS;EACvF;EACA,IAAA,IAAI,CAACJ,YAAY,CAACU,GAAG,KAAK,IAAI,CAACV,YAAY,CAACC,KAAK,GAEjDpC,SAAS,CAACI,KAAK,GACfJ,SAAS,CAACE,IAAI,CAAA;EAClB,GAAA;EACF;;ECzDA;EACA,SAASiD,KAAKA,CAA2BC,EAAqB,EAAEvB,IAAU,EAAoB;EAC5F;IACA,OAAO,IAAIsB,KAAK,CAACE,SAAS,CAACD,EAAE,EAAEvB,IAAI,CAAC,CAAA;EACtC;;ECJA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA8HA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,SAASyB,WAAWA,CAACC,IAAS,EAAO;IAC1C,IAAIA,IAAI,IAAI,IAAI,EAAE,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC,CAAA;EAEpE,EAAA,IAAID,IAAI,YAAYjC,MAAM,EAAE,OAAO6B,KAAK,CAACM,YAAY,CAAA;IACrD,IAAI9E,QAAQ,CAAC4E,IAAI,CAAC,EAAE,OAAOJ,KAAK,CAACO,aAAa,CAAA;EAC9C,EAAA,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"}